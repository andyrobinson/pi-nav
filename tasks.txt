NEXT:
- GPS did not work on last track test, probably pi config messed up - need to check all the
settings and make sure that PI can talk to GPS.  See:
https://www.raspberrypi.org/forums/viewtopic.php?f=45&t=53644
Try:
  1. Disable daemon, don't specify device, set USBAUTO to true (probably only work with GPS on USB not on serial port)
  2. Enable daemon, specify device in the OPTIONS setting not as a device,, set USBAUTO to False
  
- Trap and log errors during self test, to prevent failure at this point
- Need to a rudder command, to confirm that the rudder works as expected, then adjust the physical servo accordingly

1. Ensure system can steer around a course
2. Implement a simple sailing algorithm:
    - only navigate to (max) half-way, then reassess
    - simple steer if not in the no-go area
    - decide once at beginning of navigation which way to tack even if
    a tack is not required (always choose more direct tack)
    - bear up to wind as much as possible if tacking
    - avoid the no-go area continuously by bearing off in the direction of the tack as needed
    - set sails according to the wind direction

Time
Sort out GPS vs system time - ideally system should take it's time from gps - what happens if not there???

Epic - field test
- Field test tracking including compass and windsensor
- field test steering without sailing

Epic - simulation
- Add wind and tides to simulation
- Add a bit of randomness to simulation

Epic - power-on self test
- Blinking red then green light
- Note that failure in self-check does NOT stop navigation from beginning

Epic - sailing
Current tasks
- Add avoiding no go - when changing course and while steering (bearing off)
- Add becalmed and in irons
- write an integration test for the sailing helm
- consider if we need to break out a bearing class to encapsulate the 360 behaviour of bearings (of course we do)
- decide what to do about changes or differences in wind direction during tack
- create class to control sail angle based on relative wind, use in the sailing helm
- plumb sailing helm into wiring
- move constants into config for sailing_helm and navigator
- field test

For later
- dealing with tides/currents/drift; probably need a compass (may need compass for rate of turn anyway)
- falling back when sensors fail (for instance tracking to compass and vice-versa)
- navigate to nearest next waypoint on reboot, NOT first in list
- software autoreboot
- hardware autoreboot (n.b. problems with self-check)

Done
Epic - steering using servo based on new event design
- Add logging to a different file to sensors

- Add avg heading and abs wind direction

To run as a service under systemd:

http://www.raspberrypi-spy.co.uk/2015/10/how-to-autorun-a-python-script-on-boot-using-systemd/
